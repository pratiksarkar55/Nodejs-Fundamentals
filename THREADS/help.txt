Thread has ready,running,sleep state.
CPU always switches the threads from ready<-> running in different cores.
Physical core is actual core and logical cores are capacity of each core to do work of 2 cores.So 6 physical cores can have 12 logical cores.
Each thread has own event loop
console from worker thread happens via main thread.So if main thread is blocked, worker thread won't be able to console
If I run a worker thread and start downloading a file on that thread but then block the main thread, the main thread will download the file.

core utilization = (Total given time-idle time)/Total given time

total cpu utlization = (core utilization1+core utilization2....+core utilizationN)/N number of cores

total process cpu ultization = (core utilizationByOnlyProcess1+core utilizationByOnlyProcess2....+core utilizationByOnlyProcessN)/N number of cores


Creating thread on each request is a bad idea.As hackers can flood with requests to have dos attack.
To overcome this we can do

1. Rate limiting from particular ip or location
2. Threadpool - fixed number of threads
3. Tracking an ip if it has large request

WORKER THREADS ARE MORE USEFUL IN CPU INTENSIVE OPERATIONS RATHER THAN I/O INTENSIVES OPERATIONS. NODE BY ITSELF EXCELS 
AT HANDLING I/O OPERATIONS.
